local LibMain = {RainbowColorValue = 0, HueSelectionPosition = 0}
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")
local LocalPlayer = game:GetService("Players").LocalPlayer
local Mouse = LocalPlayer:GetMouse()
function Ripple(obj)
	spawn(
		function()
			local Mouse = game.Players.LocalPlayer:GetMouse()
			local Circle = Instance.new("ImageLabel")
			Circle.Name = "Circle"
			Circle.Parent = obj
			Circle.BackgroundColor3 = Color3.fromRGB(211,211,211)
			Circle.BackgroundTransparency = 1.000
			Circle.ZIndex = 10
			Circle.Image = "rbxassetid://266543268"
			Circle.ImageColor3 = Color3.fromRGB(100, 100, 100)
			Circle.ImageTransparency = 0.6
			local NewX, NewY = Mouse.X - Circle.AbsolutePosition.X, Mouse.Y - Circle.AbsolutePosition.Y
			Circle.Position = UDim2.new(0, NewX, 0, NewY)
			local Size = 0
			if obj.AbsoluteSize.X > obj.AbsoluteSize.Y then
				Size = obj.AbsoluteSize.X * 1
			elseif obj.AbsoluteSize.X < obj.AbsoluteSize.Y then
				Size = obj.AbsoluteSize.Y * 1
			elseif obj.AbsoluteSize.X == obj.AbsoluteSize.Y then
				Size = obj.AbsoluteSize.X * 1
			end
			Circle:TweenSizeAndPosition(
				UDim2.new(0, Size, 0, Size),
				UDim2.new(0.5, -Size / 2, 0.5, -Size / 2),
				"Out",
				"Quad",
				0.2,
				false
			)
			for i = 1, 15 do
				Circle.ImageTransparency = Circle.ImageTransparency + 0.05
				wait()
			end
			Circle:Destroy()
		end
	)
end

local function MakeDraggable(topbarobject, object)
	local Dragging = nil
	local DragInput = nil
	local DragStart = nil
	local StartPosition = nil

	local function Update(input)
		local Delta = input.Position - DragStart
		local pos =
			UDim2.new(
				StartPosition.X.Scale,
				StartPosition.X.Offset + Delta.X,
				StartPosition.Y.Scale,
				StartPosition.Y.Offset + Delta.Y
			)
		object.Position = pos
	end

	topbarobject.InputBegan:Connect(
		function(input)
			if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
				Dragging = true
				DragStart = input.Position
				StartPosition = object.Position

				input.Changed:Connect(
					function()
						if input.UserInputState == Enum.UserInputState.End then
							Dragging = false
						end
					end
				)
			end
		end
	)

	topbarobject.InputChanged:Connect(
		function(input)
			if
				input.UserInputType == Enum.UserInputType.MouseMovement or
					input.UserInputType == Enum.UserInputType.Touch
			then
				DragInput = input
			end
		end
	)

	UserInputService.InputChanged:Connect(
		function(input)
			if input == DragInput and Dragging then
				Update(input)
			end
		end
	)
end

local Library = Instance.new("ScreenGui")
Library.Name = "Library"
Library.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
Library.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

function LibMain:AddWindow()
	local ft = false
	local Window = Instance.new("Frame")
	local WindowCorner = Instance.new("UICorner")
	local LeftFrame = Instance.new("Frame")
	local LeftFrameCorner = Instance.new("UICorner")
	local Title = Instance.new("TextLabel")
	local TabsText = Instance.new("TextLabel")
	local TabHolder = Instance.new("Frame")
	local TabHolderLayout = Instance.new("UIListLayout")
	local TabFolder = Instance.new("Folder")
	local DragFrame = Instance.new("Frame")
	local CurrentTabText = Instance.new("TextLabel")

	CurrentTabText.Name = "CurrentTabText"
	CurrentTabText.Parent = Window
	CurrentTabText.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	CurrentTabText.BackgroundTransparency = 1.000
	CurrentTabText.Position = UDim2.new(0.251908392, 0, 0.0101005023, 0)
	CurrentTabText.Size = UDim2.new(0, 200, 0, 41)
	CurrentTabText.Font = Enum.Font.SourceSans
	CurrentTabText.TextColor3 = Color3.fromRGB(255, 255, 255)
	CurrentTabText.TextSize = 22.000
	CurrentTabText.TextXAlignment = Enum.TextXAlignment.Left
	CurrentTabText.Text = ""

	Window.Name = "Window"
	Window.Parent = Library
	Window.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
	Window.Position = UDim2.new(0.329166681, 0, 0.30153504, 0)
	Window.Size = UDim2.new(0, 655, 0, 398)

	DragFrame.Parent = Window
	DragFrame.Name = "DragFrame"
	DragFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	DragFrame.BackgroundTransparency = 1.000
	DragFrame.Position = UDim2.new(0.238167942, 0, 0, 0)
	DragFrame.Size = UDim2.new(0, 499, 0, 27)
	MakeDraggable(DragFrame, Window)

	WindowCorner.CornerRadius = UDim.new(0, 7)
	WindowCorner.Name = "WindowCorner"
	WindowCorner.Parent = Window

	LeftFrame.Name = "LeftFrame"
	LeftFrame.Parent = Window
	LeftFrame.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
	LeftFrame.Position = UDim2.new(-0.000604294648, 0, 0, 0)
	LeftFrame.Size = UDim2.new(0, 157, 0, 398)

	LeftFrameCorner.CornerRadius = UDim.new(0, 7)
	LeftFrameCorner.Name = "LeftFrameCorner"
	LeftFrameCorner.Parent = LeftFrame

	Title.Name = "Title"
	Title.Parent = LeftFrame
	Title.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	Title.BackgroundTransparency = 1.000
	Title.Position = UDim2.new(0.085999998, 0, 0.0069999984, 0)
	Title.Size = UDim2.new(0, 67, 0, 50)
	Title.Font = Enum.Font.SourceSans
	Title.Text = "Eshay Hub"
	Title.TextColor3 = Color3.fromRGB(255,255,255)
	Title.TextSize = 29.000
	Title.TextXAlignment = Enum.TextXAlignment.Left

	TabsText.Name = "TabsText"
	TabsText.Parent = LeftFrame
	TabsText.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	TabsText.BackgroundTransparency = 1.000
	TabsText.Position = UDim2.new(0.0810999995, 0, 0.0969, 0)
	TabsText.Size = UDim2.new(0, 67, 0, 25)
	TabsText.Font = Enum.Font.SourceSans
	TabsText.Text = "Tabs"
	TabsText.TextColor3 = Color3.fromRGB(197, 197, 197)
	TabsText.TextSize = 15.000
	TabsText.TextXAlignment = Enum.TextXAlignment.Left

	TabHolder.Name = "TabHolder"
	TabHolder.Parent = LeftFrame
	TabHolder.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	TabHolder.BackgroundTransparency = 1.000
	TabHolder.Position = UDim2.new(0.051, 0, 0.155, 0)
	TabHolder.Size = UDim2.new(0, 116, 0, 290)

	TabHolderLayout.Name = "TabHolderLayout"
	TabHolderLayout.Parent = TabHolder
	TabHolderLayout.SortOrder = Enum.SortOrder.LayoutOrder

	TabFolder.Name = "TabFolder"
	TabFolder.Parent = Window
	local Tabs = {}
	function Tabs:AddTab(text, image)
		local SectionCount = 0
		local TabBtn = Instance.new("TextButton")
		local TabIcon = Instance.new("ImageLabel")
		local TabTitle = Instance.new("TextLabel")
		TabBtn.Name = "TabBtn"
		TabBtn.Parent = TabHolder
		TabBtn.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		TabBtn.BackgroundTransparency = 1.000
		TabBtn.Position = UDim2.new(0.00595744839, 0, 0, 0)
		TabBtn.Size = UDim2.new(0, 116, 0, 35)
		TabBtn.Font = Enum.Font.SourceSans
		TabBtn.Text = ""
		TabBtn.TextColor3 = Color3.fromRGB(0, 0, 0)
		TabBtn.TextSize = 14.000

		TabIcon.Name = "TabIcon"
		TabIcon.Parent = TabBtn
		TabIcon.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		TabIcon.BackgroundTransparency = 1.000
		TabIcon.Position = UDim2.new(0.0258620698, 0, 0.114285722, 0)
		TabIcon.Size = UDim2.new(0, 25, 0, 25)
		TabIcon.Image = image
		TabIcon.ImageColor3 = Color3.fromRGB(255,255,255)

		TabTitle.Name = "TabTitle"
		TabTitle.Parent = TabBtn
		TabTitle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		TabTitle.BackgroundTransparency = 1.000
		TabTitle.Position = UDim2.new(0.275999993, 0, 0.0469999984, 0)
		TabTitle.Size = UDim2.new(0, 65, 0, 30)
		TabTitle.Font = Enum.Font.SourceSansLight
		TabTitle.Text = text
		TabTitle.TextColor3 = Color3.fromRGB(177,177,177)
		TabTitle.TextSize = 20.000
		TabTitle.TextXAlignment = Enum.TextXAlignment.Left

		local Tab = Instance.new("ScrollingFrame")
		local TabGrid = Instance.new("UIGridLayout")

		Tab.Name = "Tab"
		Tab.Parent = TabFolder
		Tab.Active = true
		Tab.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		Tab.BackgroundTransparency = 1.000
		Tab.BorderSizePixel = 0
		Tab.Position = UDim2.new(0.255000025, 0, 0.1120000118, 0)
		Tab.Size = UDim2.new(0, 478, 0, 363)
		Tab.SizeConstraint = Enum.SizeConstraint.RelativeXX
		Tab.ScrollBarThickness = 5
		Tab.CanvasSize = UDim2.new(0, 0, 0, 0)
		Tab.Visible = false

		TabGrid.Name = "TabGrid"
		TabGrid.Parent = Tab
		TabGrid.SortOrder = Enum.SortOrder.LayoutOrder
		TabGrid.CellSize = UDim2.new(0, 222, 0, 338)

		TabBtn.MouseButton1Click:Connect(
			function()
				CurrentTabText.Text = text
				for i, v in next, TabFolder:GetChildren() do
					if v.Name == "Tab" then
						v.Visible = false
					end
					Tab.Visible = true
				end

				for i, v in next, TabHolder:GetChildren() do
					if v.ClassName == "TextButton" then
						TweenService:Create(
							v.TabTitle,
							TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
							{TextColor3 = Color3.fromRGB(177,177,177)}
						):Play()
						TweenService:Create(
							TabTitle,
							TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
							{TextColor3 = Color3.fromRGB(255,255,255)}
						):Play()
					end
				end
			end
		)

		if ft == false then
			ft = true
			TabTitle.TextColor3 = Color3.fromRGB(255,255,255)
			Tab.Visible = true
			CurrentTabText.Text = text
		end

		local TabContent = {}
		function TabContent:AddSection(text)
			SectionCount = SectionCount + 1
			if SectionCount == 3 then
				return
			end
			local Section = Instance.new("Frame")
			local SectionTitle = Instance.new("TextLabel")
			local SectionItemHolder = Instance.new("ScrollingFrame")
			local SectionHolderList = Instance.new("UIListLayout")

			Section.Name = "Section"
			Section.Parent = Tab
			Section.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
			Section.BorderSizePixel = 0
			Section.Position = UDim2.new(0.253792942, 0, 0.0496056341, 0)
			Section.Size = UDim2.new(0, 190, 0, 368)

			SectionTitle.Name = "SectionTitle"
			SectionTitle.Parent = Section
			SectionTitle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			SectionTitle.BackgroundTransparency = 1.000
			SectionTitle.Position = UDim2.new(0.0780000016, 0, 0.0439999998, 0)
			SectionTitle.Size = UDim2.new(0, 67, 0, 22)
			SectionTitle.Font = Enum.Font.SourceSans
			SectionTitle.Text = text
			SectionTitle.TextColor3 = Color3.fromRGB(255,255,255)
			SectionTitle.TextSize = 19.000
			SectionTitle.TextXAlignment = Enum.TextXAlignment.Left

			SectionItemHolder.Name = "SectionItemHolder"
			SectionItemHolder.Parent = Section
			SectionItemHolder.Active = true
			SectionItemHolder.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			SectionItemHolder.BackgroundTransparency = 1.000
			SectionItemHolder.BorderSizePixel = 0
			SectionItemHolder.Position = UDim2.new(0.0532543287, 0, 0.132923797, 0)
			SectionItemHolder.Size = UDim2.new(0, 205, 0, 275)
			SectionItemHolder.SizeConstraint = Enum.SizeConstraint.RelativeXX
			SectionItemHolder.CanvasSize = UDim2.new(0, 0, 0, 0)
			SectionItemHolder.ScrollBarThickness = 3
			SectionItemHolder.ScrollBarImageColor3 = Color3.fromRGB(235, 234, 235)

			SectionHolderList.Name = "SectionHolderList"
			SectionHolderList.Parent = SectionItemHolder
			SectionHolderList.SortOrder = Enum.SortOrder.LayoutOrder
			SectionHolderList.Padding = UDim.new(0, 4)
			Tab.CanvasSize = UDim2.new(0, 0, 0, TabGrid.AbsoluteContentSize.Y)
			local SectionContent = {}
			function SectionContent:AddButton(text, callback)
				local Button = Instance.new("TextButton")
				local ButtonCorner = Instance.new("UICorner")

				Button.Name = "Button"
				Button.Parent = SectionItemHolder
				Button.BackgroundColor3 = Color3.fromRGB(64, 63, 64)
				Button.BorderSizePixel = 0
				Button.Size = UDim2.new(0, 198, 0, 26)
				Button.AutoButtonColor = false
				Button.Font = Enum.Font.SourceSans
				Button.TextColor3 = Color3.fromRGB(255,255,255)
				Button.TextSize = 15.000
				Button.ClipsDescendants = true
				Button.Text = text

				ButtonCorner.CornerRadius = UDim.new(0, 6)
				ButtonCorner.Name = "ButtonCorner"
				ButtonCorner.Parent = Button

				Button.MouseEnter:Connect(
					function()
						TweenService:Create(
							Button,
							TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
							{BackgroundColor3 = Color3.fromRGB(69, 68, 69)}
						):Play()
					end
				)

				Button.MouseLeave:Connect(
					function()
						TweenService:Create(
							Button,
							TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
							{BackgroundColor3 = Color3.fromRGB(64, 63, 64)}
						):Play()
					end
				)

				Button.MouseButton1Click:Connect(
					function()
						Ripple(Button)
						pcall(callback)
					end
				)

				SectionItemHolder.CanvasSize = UDim2.new(0, 0, 0, SectionHolderList.AbsoluteContentSize.Y)
			end

			function SectionContent:AddSwitch(text, callback)
				local Toggled = false
				local Toggle = Instance.new("TextButton")
				local ToggleTitle = Instance.new("TextLabel")
				local ToggleFrame = Instance.new("Frame")
				local ToggleFrameCorner = Instance.new("UICorner")
				local ToggleFrameWhite = Instance.new("Frame")
				local ToggleFrameWhiteCorner = Instance.new("UICorner")
				local ToggleCircle = Instance.new("Frame")
				local ToggleCircleCorner = Instance.new("UICorner")

				Toggle.Name = "Toggle"
				Toggle.Parent = SectionItemHolder
				Toggle.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
				Toggle.BorderSizePixel = 0
				Toggle.Position = UDim2.new(-0.306870222, 0, 1.23869348, 0)
				Toggle.Size = UDim2.new(0, 198, 0, 26)
				Toggle.AutoButtonColor = false
				Toggle.Font = Enum.Font.SourceSans
				Toggle.Text = ""
				Toggle.TextColor3 = Color3.fromRGB(0, 0, 0)
				Toggle.TextSize = 15.000

				ToggleTitle.Name = "ToggleTitle"
				ToggleTitle.Parent = Toggle
				ToggleTitle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
				ToggleTitle.BackgroundTransparency = 1.000
				ToggleTitle.Position = UDim2.new(0, 5, 0, 0)
				ToggleTitle.Size = UDim2.new(0, 17, 0, 25)
				ToggleTitle.Font = Enum.Font.SourceSans
				ToggleTitle.Text = text
				ToggleTitle.TextColor3 = Color3.fromRGB(255,255,255)
				ToggleTitle.TextSize = 15.000
				ToggleTitle.TextXAlignment = Enum.TextXAlignment.Left
				ToggleTitle.TextTransparency = 0.4

				ToggleFrame.Name = "ToggleFrame"
				ToggleFrame.Parent = Toggle
				ToggleFrame.AnchorPoint = Vector2.new(0.5, 0.5)
				ToggleFrame.BackgroundColor3 = Color3.fromRGB(235, 234, 235)
				ToggleFrame.Position = UDim2.new(0.898024716, 0, 0.461538464, 0)
				ToggleFrame.Size = UDim2.new(0, 33, 0, 19)

				ToggleFrameCorner.CornerRadius = UDim.new(1, 0)
				ToggleFrameCorner.Name = "ToggleFrameCorner"
				ToggleFrameCorner.Parent = ToggleFrame

				ToggleFrameWhite.Name = "ToggleFrameWhite"
				ToggleFrameWhite.Parent = ToggleFrame
				ToggleFrameWhite.AnchorPoint = Vector2.new(0.5, 0.5)
				ToggleFrameWhite.BackgroundColor3 = Color3.fromRGB(255, 254, 255)
				ToggleFrameWhite.LayoutOrder = 2
				ToggleFrameWhite.Position = UDim2.new(0.514999986, 0, 0.609000027, -2)
				ToggleFrameWhite.Size = UDim2.new(0, 30, 0, 16)

				ToggleFrameWhiteCorner.CornerRadius = UDim.new(1, 0)
				ToggleFrameWhiteCorner.Name = "ToggleFrameWhiteCorner"
				ToggleFrameWhiteCorner.Parent = ToggleFrameWhite

				ToggleCircle.Name = "ToggleCircle"
				ToggleCircle.Parent = ToggleFrame
				ToggleCircle.AnchorPoint = Vector2.new(0.5, 0.5)
				ToggleCircle.BackgroundColor3 = Color3.fromRGB(235, 234, 235)
				ToggleCircle.LayoutOrder = 1
				ToggleCircle.Position = UDim2.new(0.197999999, 0, 0.609000027, -2)
				ToggleCircle.Size = UDim2.new(0, 17, 0, 17)

				ToggleCircleCorner.CornerRadius = UDim.new(1, 0)
				ToggleCircleCorner.Name = "ToggleCircleCorner"
				ToggleCircleCorner.Parent = ToggleCircle

				Toggle.MouseButton1Click:Connect(
					function()
						if Toggled == false then
							TweenService:Create(
								ToggleCircle,
								TweenInfo.new(.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
								{BackgroundColor3 = Color3.fromRGB(101, 97, 214)}
							):Play()
							TweenService:Create(
								ToggleTitle,
								TweenInfo.new(.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
								{TextTransparency = 0}
							):Play()
							TweenService:Create(
								ToggleFrameWhite,
								TweenInfo.new(.1, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
								{BackgroundColor3 = Color3.fromRGB(229, 227, 255)}
							):Play()
							TweenService:Create(
								ToggleFrame,
								TweenInfo.new(.1, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
								{BackgroundColor3 = Color3.fromRGB(229, 227, 255)}
							):Play()
							ToggleCircle:TweenPosition(
								UDim2.new(0.688, 0, 0.609000027, -2),
								Enum.EasingDirection.Out,
								Enum.EasingStyle.Quart,
								0.2,
								true
							)
						else
							TweenService:Create(
								ToggleCircle,
								TweenInfo.new(.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
								{BackgroundColor3 = Color3.fromRGB(235, 234, 235)}
							):Play()
							TweenService:Create(
								ToggleTitle,
								TweenInfo.new(.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
								{TextTransparency = 0.4}
							):Play()
							TweenService:Create(
								ToggleFrameWhite,
								TweenInfo.new(.1, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
								{BackgroundColor3 = Color3.fromRGB(255, 254, 255)}
							):Play()
							TweenService:Create(
								ToggleFrame,
								TweenInfo.new(.1, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
								{BackgroundColor3 = Color3.fromRGB(235, 234, 235)}
							):Play()
							ToggleCircle:TweenPosition(
								UDim2.new(0.197999999, 0, 0.609000027, -2),
								Enum.EasingDirection.Out,
								Enum.EasingStyle.Quart,
								0.2,
								true
							)
						end
						Toggled = not Toggled
						pcall(callback, Toggled)
					end
				)
				SectionItemHolder.CanvasSize = UDim2.new(0, 0, 0, SectionHolderList.AbsoluteContentSize.Y)
			end

			function SectionContent:AddSlider(text, min, max, callback)
				local dragging = false
				local Slider = Instance.new("TextButton")
				local SliderTitle = Instance.new("TextLabel")
				local SlideFrame = Instance.new("Frame")
				local CurrentValueFrame = Instance.new("Frame")
				local SlideCircle = Instance.new("ImageButton")
				local Value = Instance.new("TextLabel")

				Slider.Name = "Slider"
				Slider.Parent = SectionItemHolder
				Slider.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
				Slider.BorderSizePixel = 0
				Slider.Position = UDim2.new(0.422900766, 0, 1.18090463, 0)
				Slider.Size = UDim2.new(0, 198, 0, 45)
				Slider.AutoButtonColor = false
				Slider.Font = Enum.Font.SourceSans
				Slider.Text = ""
				Slider.TextColor3 = Color3.fromRGB(0, 0, 0)
				Slider.TextSize = 15.000

				SliderTitle.Name = "SliderTitle"
				SliderTitle.Parent = Slider
				SliderTitle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
				SliderTitle.BackgroundTransparency = 1.000
				SliderTitle.Position = UDim2.new(0, 5, 0, 0)
				SliderTitle.Size = UDim2.new(0, 17, 0, 25)
				SliderTitle.Font = Enum.Font.SourceSans
				SliderTitle.Text = text
				SliderTitle.TextColor3 = Color3.fromRGB(255,255,255)
				SliderTitle.TextSize = 15.000
				SliderTitle.TextXAlignment = Enum.TextXAlignment.Left

				SlideFrame.Name = "SlideFrame"
				SlideFrame.Parent = Slider
				SlideFrame.BackgroundColor3 = Color3.fromRGB(235, 234, 235)
				SlideFrame.BorderSizePixel = 0
				SlideFrame.Position = UDim2.new(0.0439362712, 0, 0.646098614, 0)
				SlideFrame.Size = UDim2.new(0, 182, 0, 3)

				CurrentValueFrame.Name = "CurrentValueFrame"
				CurrentValueFrame.Parent = SlideFrame
				CurrentValueFrame.BackgroundColor3 = Color3.fromRGB(229, 227, 255)
				CurrentValueFrame.BorderSizePixel = 0
				CurrentValueFrame.Position = UDim2.new(-0.01369863, 0, 0, 0)
				CurrentValueFrame.Size = UDim2.new(0, 0, 0, 3)

				SlideCircle.Name = "SlideCircle"
				SlideCircle.Parent = SlideFrame
				SlideCircle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
				SlideCircle.BackgroundTransparency = 1.000
				SlideCircle.Position = UDim2.new(-0.02054796, 0, -1.90476203, 0)
				SlideCircle.Size = UDim2.new(0, 14, 0, 14)
				SlideCircle.Image = "rbxassetid://3570695787"
				SlideCircle.ImageColor3 = Color3.fromRGB(101, 97, 214)

				Value.Name = "Value"
				Value.Parent = Slider
				Value.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
				Value.BackgroundTransparency = 1.000
				Value.Position = UDim2.new(0, 176, 0, 0)
				Value.Size = UDim2.new(0, 17, 0, 25)
				Value.Font = Enum.Font.SourceSans
				Value.Text = min
				Value.TextColor3 = Color3.fromRGB(255,255,255)
				Value.TextSize = 16.000
				Value.TextXAlignment = Enum.TextXAlignment.Right

				local function move(input)
					local pos =
						UDim2.new(
							math.clamp((input.Position.X - SlideFrame.AbsolutePosition.X) / SlideFrame.AbsoluteSize.X, 0, 1),
							-6,
							-1.90476203,
							0
						)
					local pos1 =
						UDim2.new(
							math.clamp((input.Position.X - SlideFrame.AbsolutePosition.X) / SlideFrame.AbsoluteSize.X, 0, 1),
							0,
							0,
							3
						)
					CurrentValueFrame:TweenSize(pos1, "Out", "Sine", 0.1, true)
					SlideCircle:TweenPosition(pos, "Out", "Sine", 0.1, true)
					local value = math.floor(((pos.X.Scale * max) / max) * (max - min) + min)
					Value.Text = tostring(value)
					pcall(callback, value)
				end
				SlideCircle.InputBegan:Connect(
					function(input)
						if input.UserInputType == Enum.UserInputType.MouseButton1 then
							dragging = true
						end
					end
				)
				SlideCircle.InputEnded:Connect(
					function(input)
						if input.UserInputType == Enum.UserInputType.MouseButton1 then
							dragging = false
						end
					end
				)
				game:GetService("UserInputService").InputChanged:Connect(
				function(input)
					if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
						move(input)
					end
				end
				)
				SectionItemHolder.CanvasSize = UDim2.new(0, 0, 0, SectionHolderList.AbsoluteContentSize.Y)
			end

			function SectionContent:AddDropdown(text, list, callback)
				local Current = text
				local ItemCount = 0
				local FrameSize = 0
				local DropToggled = false

				local Dropdown = Instance.new("TextButton")
				local DropdownTitle = Instance.new("TextLabel")
				local Arrow = Instance.new("ImageLabel")
				local DropdownCorner = Instance.new("UICorner")

				Dropdown.Name = "Dropdown"
				Dropdown.Parent = SectionItemHolder
				Dropdown.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
				Dropdown.BorderSizePixel = 0
				Dropdown.Position = UDim2.new(-0.311450362, 0, 0.595477402, 0)
				Dropdown.Size = UDim2.new(0, 198, 0, 26)
				Dropdown.AutoButtonColor = false
				Dropdown.Font = Enum.Font.SourceSans
				Dropdown.Text = ""
				Dropdown.TextColor3 = Color3.fromRGB(0, 0, 0)
				Dropdown.TextSize = 15.000

				DropdownCorner.CornerRadius = UDim.new(0, 6)
				DropdownCorner.Name = "ItemCorner"
				DropdownCorner.Parent = Dropdown

				DropdownTitle.Name = "DropdownTitle"
				DropdownTitle.Parent = Dropdown
				DropdownTitle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
				DropdownTitle.BackgroundTransparency = 1.000
				DropdownTitle.Position = UDim2.new(0, 5, 0, 0)
				DropdownTitle.Size = UDim2.new(0, 17, 0, 25)
				DropdownTitle.Font = Enum.Font.SourceSans
				DropdownTitle.Text = text
				DropdownTitle.TextColor3 = Color3.fromRGB(255,255,255)
				DropdownTitle.TextSize = 15.000
				DropdownTitle.TextXAlignment = Enum.TextXAlignment.Left

				Arrow.Name = "Arrow"
				Arrow.Parent = Dropdown
				Arrow.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
				Arrow.BackgroundTransparency = 1.000
				Arrow.Position = UDim2.new(0.839506149, 0, 0, 0)
				Arrow.Size = UDim2.new(0, 26, 0, 26)
				Arrow.Image = "http://www.roblox.com/asset/?id=6034818372"
				Arrow.ImageColor3 = Color3.fromRGB(255,255,255)

				local DropdownFrame = Instance.new("ScrollingFrame")
				local DropdownFrameList = Instance.new("UIListLayout")

				DropdownFrame.Name = "DropdownFrame"
				DropdownFrame.Parent = SectionItemHolder
				DropdownFrame.Active = true
				DropdownFrame.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
				DropdownFrame.BorderSizePixel = 0
				DropdownFrame.Position = UDim2.new(0, 0, 0.448387086, 0)
				DropdownFrame.Size = UDim2.new(0, 203, 0, 0)
				DropdownFrame.SizeConstraint = Enum.SizeConstraint.RelativeXX
				DropdownFrame.CanvasSize = UDim2.new(0, 0, 0, 0)
				DropdownFrame.ScrollBarThickness = 3
				DropdownFrame.Visible = false
				DropdownFrame.ScrollBarImageColor3 = Color3.fromRGB(235, 234, 235)

				DropdownFrameList.Name = "DropdownFrameList"
				DropdownFrameList.Parent = DropdownFrame
				DropdownFrameList.SortOrder = Enum.SortOrder.LayoutOrder

				Dropdown.MouseButton1Click:Connect(
					function()
						if DropToggled == false then
							DropdownFrame.Visible = true
							DropdownTitle.Text = Current
							DropdownFrame:TweenSize(
								UDim2.new(0, 198, 0, FrameSize),
								Enum.EasingDirection.Out,
								Enum.EasingStyle.Quart,
								0.1,
								true
							)
							TweenService:Create(
								Arrow,
								TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
								{Rotation = 180}
							):Play()
							TweenService:Create(
								Dropdown,
								TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
								{BackgroundColor3 = Color3.fromRGB(64, 63, 64)}
							):Play()
							TweenService:Create(
								DropdownTitle,
								TweenInfo.new(.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
								{TextTransparency = 0.4}
							):Play()
							DropToggled = not DropToggled
							repeat
								wait()
							until DropdownFrame.Size == UDim2.new(0, 198, 0, FrameSize)
							SectionItemHolder.CanvasSize = UDim2.new(0, 0, 0, SectionHolderList.AbsoluteContentSize.Y)
						else
							DropdownTitle.Text = text
							DropdownFrame:TweenSize(
								UDim2.new(0, 198, 0, 0),
								Enum.EasingDirection.Out,
								Enum.EasingStyle.Quart,
								0.1,
								true
							)
							TweenService:Create(
								Dropdown,
								TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
								{BackgroundColor3 = Color3.fromRGB(50, 50, 50)}
							):Play()
							TweenService:Create(
								DropdownTitle,
								TweenInfo.new(.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
								{TextTransparency = 0}
							):Play()
							TweenService:Create(
								Arrow,
								TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
								{Rotation = 0}
							):Play()
							DropToggled = not DropToggled
							repeat
								wait()
							until DropdownFrame.Size == UDim2.new(0, 198, 0, 0)
							SectionItemHolder.CanvasSize = UDim2.new(0, 0, 0, SectionHolderList.AbsoluteContentSize.Y)
							DropdownFrame.Visible = false
						end
					end
				)

				for i, v in next, list do
					ItemCount = ItemCount + 1

					if ItemCount <= 2 then
						FrameSize = FrameSize + 26
					elseif ItemCount >= 3 then
						FrameSize = 78
					end

					local Item = Instance.new("TextButton")
					local ItemCorner = Instance.new("UICorner")

					Item.Name = "Item"
					Item.Parent = DropdownFrame
					Item.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
					Item.BorderSizePixel = 0
					Item.Position = UDim2.new(-0.233587787, 0, 0.934673369, 0)
					Item.Size = UDim2.new(0, 198, 0, 26)
					Item.AutoButtonColor = false
					Item.Font = Enum.Font.SourceSans
					Item.TextColor3 = Color3.fromRGB(255,255,255)
					Item.TextSize = 15.000
					Item.Text = v

					ItemCorner.CornerRadius = UDim.new(0, 6)
					ItemCorner.Name = "ItemCorner"
					ItemCorner.Parent = Item

					Item.MouseEnter:Connect(
						function()
							TweenService:Create(
								Item,
								TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
								{BackgroundColor3 = Color3.fromRGB(64, 63, 64)}
							):Play()
						end
					)

					Item.MouseLeave:Connect(
						function()
							TweenService:Create(
								Item,
								TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
								{BackgroundColor3 = Color3.fromRGB(50, 50, 50)}
							):Play()
						end
					)

					Item.MouseButton1Click:Connect(
						function()
							Current = v
							DropdownTitle.Text = text
							pcall(callback, v)
							DropdownFrame:TweenSize(
								UDim2.new(0, 198, 0, 0),
								Enum.EasingDirection.Out,
								Enum.EasingStyle.Quart,
								0.1,
								true
							)
							TweenService:Create(
								Dropdown,
								TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
								{BackgroundColor3 = Color3.fromRGB(50, 50, 50)}
							):Play()
							TweenService:Create(
								Arrow,
								TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
								{Rotation = 0}
							):Play()
							TweenService:Create(
								DropdownTitle,
								TweenInfo.new(.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
								{TextTransparency = 0}
							):Play()
							DropToggled = not DropToggled
							repeat
								wait()
							until DropdownFrame.Size == UDim2.new(0, 198, 0, 0)
							SectionItemHolder.CanvasSize = UDim2.new(0, 0, 0, SectionHolderList.AbsoluteContentSize.Y)
							DropdownFrame.Visible = false
						end
					)

					DropdownFrame.CanvasSize = UDim2.new(0, 0, 0, DropdownFrameList.AbsoluteContentSize.Y)
				end
				SectionItemHolder.CanvasSize = UDim2.new(0, 0, 0, SectionHolderList.AbsoluteContentSize.Y)
			end

			function SectionContent:AddLabel(text)
				local Label = Instance.new("TextButton")

				Label.Name = "Button"
				Label.Parent = SectionItemHolder
				Label.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
				Label.BorderSizePixel = 0
				Label.Size = UDim2.new(0, 198, 0, 26)
				Label.AutoButtonColor = false
				Label.Font = Enum.Font.SourceSans
				Label.TextColor3 = Color3.fromRGB(255,255,255)
				Label.TextSize = 15.000
				Label.ClipsDescendants = true
				Label.Text = text
				SectionItemHolder.CanvasSize = UDim2.new(0, 0, 0, SectionHolderList.AbsoluteContentSize.Y)
			end

			function SectionContent:AddColorpicker(text, preset, callback)
				local ColorPickerToggled = false
				local OldToggleColor = Color3.fromRGB(0, 0, 0)
				local OldColor = Color3.fromRGB(0, 0, 0)
				local OldColorSelectionPosition = nil
				local OldHueSelectionPosition = nil
				local ColorH, ColorS, ColorV = 1, 1, 1
				local RainbowColorPicker = false
				local ColorPickerInput = nil
				local ColorInput = nil
				local HueInput = nil

				local Colorpicker = Instance.new("TextButton")
				local ColorpickerTitle = Instance.new("TextLabel")
				local ColorpickerBox = Instance.new("Frame")
				local ColorpickerCorner = Instance.new("UICorner")

				Colorpicker.Name = "Colorpicker"
				Colorpicker.Parent = SectionItemHolder
				Colorpicker.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
				Colorpicker.BorderSizePixel = 0
				Colorpicker.Position = UDim2.new(-0.306870222, 0, 1.23869348, 0)
				Colorpicker.Size = UDim2.new(0, 198, 0, 26)
				Colorpicker.AutoButtonColor = false
				Colorpicker.Font = Enum.Font.SourceSans
				Colorpicker.Text = ""
				Colorpicker.TextColor3 = Color3.fromRGB(0, 0, 0)
				Colorpicker.TextSize = 15.000

				ColorpickerTitle.Name = "ColorpickerTitle"
				ColorpickerTitle.Parent = Colorpicker
				ColorpickerTitle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
				ColorpickerTitle.BackgroundTransparency = 1.000
				ColorpickerTitle.Position = UDim2.new(0, 5, 0, 0)
				ColorpickerTitle.Size = UDim2.new(0, 17, 0, 25)
				ColorpickerTitle.Font = Enum.Font.SourceSans
				ColorpickerTitle.Text = text
				ColorpickerTitle.TextColor3 = Color3.fromRGB(255,255,255)
				ColorpickerTitle.TextSize = 15.000
				ColorpickerTitle.TextXAlignment = Enum.TextXAlignment.Left
				ColorpickerTitle.TextTransparency = 0.4

				ColorpickerBox.Name = "ToggleFrame"
				ColorpickerBox.Parent = Colorpicker
				ColorpickerBox.AnchorPoint = Vector2.new(0.5, 0.5)
				ColorpickerBox.BackgroundColor3 = preset
				ColorpickerBox.Position = UDim2.new(0.868024716, 0, 0.461538464, 0)
				ColorpickerBox.Size = UDim2.new(0, 33, 0, 19)

				ColorpickerCorner.CornerRadius = UDim.new(0, 6)
				ColorpickerCorner.Name = "ToggleFrameCorner"
				ColorpickerCorner.Parent = ColorpickerBox

				local ColorpickerFrame = Instance.new("ScrollingFrame")
				local Hue = Instance.new("ImageLabel")
				local HueCorner = Instance.new("UICorner")
				local HueGradient = Instance.new("UIGradient")
				local HueSelection = Instance.new("ImageLabel")
				local Color = Instance.new("ImageLabel")
				local ColorCorner = Instance.new("UICorner")
				local ColorSelection = Instance.new("ImageLabel")
				local Confirm = Instance.new("TextButton")
				local ConfirmCorner = Instance.new("UICorner")

				ColorpickerFrame.Name = "ColorpickerFrame"
				ColorpickerFrame.Parent = SectionItemHolder
				ColorpickerFrame.Active = true
				ColorpickerFrame.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
				ColorpickerFrame.BorderSizePixel = 0
				ColorpickerFrame.Position = UDim2.new(-0.384732813, 0, 0.362425059, 0)
				ColorpickerFrame.Size = UDim2.new(0, 198, 0, 0)
				ColorpickerFrame.SizeConstraint = Enum.SizeConstraint.RelativeXX
				ColorpickerFrame.CanvasSize = UDim2.new(0, 0, 0, 0)
				ColorpickerFrame.ScrollBarThickness = 3
				ColorpickerFrame.Visible = false

				Hue.Name = "Hue"
				Hue.Parent = ColorpickerFrame
				Hue.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
				Hue.Position = UDim2.new(0, 167, 0, 9)
				Hue.Size = UDim2.new(0, 21, 0, 114)

				HueCorner.CornerRadius = UDim.new(0, 3)
				HueCorner.Name = "HueCorner"
				HueCorner.Parent = Hue

				HueGradient.Color =
					ColorSequence.new {
						ColorSequenceKeypoint.new(0.00, Color3.fromRGB(255, 0, 4)),
						ColorSequenceKeypoint.new(0.20, Color3.fromRGB(234, 255, 0)),
						ColorSequenceKeypoint.new(0.40, Color3.fromRGB(21, 255, 0)),
						ColorSequenceKeypoint.new(0.60, Color3.fromRGB(0, 255, 255)),
						ColorSequenceKeypoint.new(0.80, Color3.fromRGB(0, 17, 255)),
						ColorSequenceKeypoint.new(0.90, Color3.fromRGB(255, 0, 251)),
						ColorSequenceKeypoint.new(1.00, Color3.fromRGB(255, 0, 4))
					}
				HueGradient.Rotation = 270
				HueGradient.Name = "HueGradient"
				HueGradient.Parent = Hue

				HueSelection.Name = "HueSelection"
				HueSelection.Parent = Hue
				HueSelection.AnchorPoint = Vector2.new(0.5, 0.5)
				HueSelection.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
				HueSelection.BackgroundTransparency = 1.000
				HueSelection.Position = UDim2.new(0.48, 0, 1 - select(1, Color3.toHSV(preset)))
				HueSelection.Size = UDim2.new(0, 18, 0, 18)
				HueSelection.Image = "http://www.roblox.com/asset/?id=4805639000"

				Color.Name = "Color"
				Color.Parent = ColorpickerFrame
				Color.BackgroundColor3 = preset
				Color.Position = UDim2.new(0, 5, 0, 9)
				Color.Size = UDim2.new(0, 155, 0, 114)
				Color.ZIndex = 10
				Color.Image = "rbxassetid://4155801252"

				ColorCorner.CornerRadius = UDim.new(0, 3)
				ColorCorner.Name = "ColorCorner"
				ColorCorner.Parent = Color

				ColorSelection.Name = "ColorSelection"
				ColorSelection.Parent = Color
				ColorSelection.AnchorPoint = Vector2.new(0.5, 0.5)
				ColorSelection.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
				ColorSelection.BackgroundTransparency = 1.000
				ColorSelection.Position = UDim2.new(preset and select(3, Color3.toHSV(preset)))
				ColorSelection.Size = UDim2.new(0, 18, 0, 18)
				ColorSelection.Image = "http://www.roblox.com/asset/?id=4805639000"
				ColorSelection.ScaleType = Enum.ScaleType.Fit

				Confirm.Name = "Confirm"
				Confirm.Parent = ColorpickerFrame
				Confirm.BackgroundColor3 = Color3.fromRGB(63,64,63)
				Confirm.BorderSizePixel = 0
				Confirm.Position = UDim2.new(0.0299999993, 0, 0.834025204, 0)
				Confirm.Size = UDim2.new(0, 168, 0, 26)
				Confirm.AutoButtonColor = false
				Confirm.Font = Enum.Font.SourceSans
				Confirm.Text = "Confirm"
				Confirm.TextColor3 = Color3.fromRGB(255,255,255)
				Confirm.TextSize = 16.000

				ConfirmCorner.CornerRadius = UDim.new(0, 6)
				ConfirmCorner.Name = "ConfirmCorner"
				ConfirmCorner.Parent = Confirm

				SectionItemHolder.CanvasSize = UDim2.new(0, 0, 0, SectionHolderList.AbsoluteContentSize.Y)

				local function UpdateColorPicker(nope)
					ColorpickerBox.BackgroundColor3 = Color3.fromHSV(ColorH, ColorS, ColorV)
					Color.BackgroundColor3 = Color3.fromHSV(ColorH, 1, 1)

					pcall(callback, ColorpickerBox.BackgroundColor3)
				end

				ColorH =
					1 -
					(math.clamp(HueSelection.AbsolutePosition.Y - Hue.AbsolutePosition.Y, 0, Hue.AbsoluteSize.Y) /
						Hue.AbsoluteSize.Y)
				ColorS =
					(math.clamp(ColorSelection.AbsolutePosition.X - Color.AbsolutePosition.X, 0, Color.AbsoluteSize.X) /
						Color.AbsoluteSize.X)
				ColorV =
					1 -
					(math.clamp(ColorSelection.AbsolutePosition.Y - Color.AbsolutePosition.Y, 0, Color.AbsoluteSize.Y) /
						Color.AbsoluteSize.Y)

				ColorpickerBox.BackgroundColor3 = preset
				Color.BackgroundColor3 = preset
				pcall(callback, ColorpickerBox.BackgroundColor3)

				Color.InputBegan:Connect(
					function(input)
						if input.UserInputType == Enum.UserInputType.MouseButton1 then
							if RainbowColorPicker then
								return
							end

							if ColorInput then
								ColorInput:Disconnect()
							end

							ColorInput =
								RunService.RenderStepped:Connect(
									function()
									local ColorX =
										(math.clamp(Mouse.X - Color.AbsolutePosition.X, 0, Color.AbsoluteSize.X) /
											Color.AbsoluteSize.X)
									local ColorY =
										(math.clamp(Mouse.Y - Color.AbsolutePosition.Y, 0, Color.AbsoluteSize.Y) /
											Color.AbsoluteSize.Y)

									ColorSelection.Position = UDim2.new(ColorX, 0, ColorY, 0)
									ColorS = ColorX
									ColorV = 1 - ColorY

									UpdateColorPicker(true)
								end
								)
						end
					end
				)

				Color.InputEnded:Connect(
					function(input)
						if input.UserInputType == Enum.UserInputType.MouseButton1 then
							if ColorInput then
								ColorInput:Disconnect()
							end
						end
					end
				)

				Hue.InputBegan:Connect(
					function(input)
						if input.UserInputType == Enum.UserInputType.MouseButton1 then
							if RainbowColorPicker then
								return
							end

							if HueInput then
								HueInput:Disconnect()
							end

							HueInput =
								RunService.RenderStepped:Connect(
									function()
									local HueY =
										(math.clamp(Mouse.Y - Hue.AbsolutePosition.Y, 0, Hue.AbsoluteSize.Y) /
											Hue.AbsoluteSize.Y)

									HueSelection.Position = UDim2.new(0.48, 0, HueY, 0)
									ColorH = 1 - HueY

									UpdateColorPicker(true)
								end
								)
						end
					end
				)

				Hue.InputEnded:Connect(
					function(input)
						if input.UserInputType == Enum.UserInputType.MouseButton1 then
							if HueInput then
								HueInput:Disconnect()
							end
						end
					end
				)

				Confirm.MouseEnter:Connect(
					function()
						TweenService:Create(
							Confirm,
							TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
							{BackgroundColor3 = Color3.fromRGB(68,69,68)}
						):Play()
					end
				)

				Confirm.MouseLeave:Connect(
					function()
						TweenService:Create(
							Confirm,
							TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
							{BackgroundColor3 = Color3.fromRGB(63,64,63)}
						):Play()
					end
				)

				Colorpicker.MouseButton1Click:Connect(
					function()
						if ColorPickerToggled == false then
							ColorPickerToggled = not ColorPickerToggled
							ColorpickerFrame.Visible = true
							ColorpickerFrame:TweenSize(
								UDim2.new(0, 198, 0, 154),
								Enum.EasingDirection.Out,
								Enum.EasingStyle.Quart,
								0.1,
								true
							)
							TweenService:Create(
								ColorpickerTitle,
								TweenInfo.new(.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
								{TextTransparency = 0}
							):Play()
							repeat
								wait()
							until ColorpickerFrame.Size == UDim2.new(0, 198, 0, 154)
							SectionItemHolder.CanvasSize = UDim2.new(0, 0, 0, SectionHolderList.AbsoluteContentSize.Y)
						else
							ColorPickerToggled = not ColorPickerToggled
							ColorpickerFrame:TweenSize(
								UDim2.new(0, 198, 0, 0),
								Enum.EasingDirection.Out,
								Enum.EasingStyle.Quart,
								0.1,
								true
							)
							TweenService:Create(
								ColorpickerTitle,
								TweenInfo.new(.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
								{TextTransparency = 0.4}
							):Play()
							repeat
								wait()
							until ColorpickerFrame.Size == UDim2.new(0, 198, 0, 0)
							ColorpickerFrame.Visible = false
							SectionItemHolder.CanvasSize = UDim2.new(0, 0, 0, SectionHolderList.AbsoluteContentSize.Y)
						end
					end
				)

				Confirm.MouseButton1Click:Connect(
					function()
						ColorPickerToggled = not ColorPickerToggled
						ColorpickerFrame:TweenSize(
							UDim2.new(0, 163, 0, 0),
							Enum.EasingDirection.Out,
							Enum.EasingStyle.Quart,
							0.1,
							true
						)
						TweenService:Create(
							ColorpickerTitle,
							TweenInfo.new(.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
							{TextTransparency = 0.4}
						):Play()
						repeat
							wait()
						until ColorpickerFrame.Size == UDim2.new(0, 163, 0, 0)
						ColorpickerFrame.Visible = false
						SectionItemHolder.CanvasSize = UDim2.new(0, 0, 0, SectionHolderList.AbsoluteContentSize.Y)
					end
				)
			end
			function SectionContent:AddFolder(text)
				local FolderToggled = false
				local Folder = Instance.new("Frame")
				local FolderBtn = Instance.new("TextButton")
				local FolderTitle = Instance.new("TextLabel")
				local Icon = Instance.new("ImageLabel")
				local FolderHolder = Instance.new("Frame")
				local FolderList = Instance.new("UIListLayout")

				Folder.Name = "Folder"
				Folder.Parent = SectionItemHolder
				Folder.BackgroundColor3 = Color3.fromRGB(50,50,50)
				Folder.BorderSizePixel = 0
				Folder.Position = UDim2.new(-0.311450392, 0, 0.655778944, 0)
				Folder.Size = UDim2.new(0, 198, 0, 24)
				Folder.ClipsDescendants = true

				FolderBtn.Name = "FolderBtn"
				FolderBtn.Parent = Folder
				FolderBtn.BackgroundColor3 = Color3.fromRGB(50,50,50)
				FolderBtn.BorderSizePixel = 0
				FolderBtn.Position = UDim2.new(-0.00280837063, 0, 0, 0)
				FolderBtn.Size = UDim2.new(0, 162, 0, 24)
				FolderBtn.AutoButtonColor = false
				FolderBtn.Font = Enum.Font.SourceSans
				FolderBtn.Text = ""
				FolderBtn.TextColor3 = Color3.fromRGB(0, 0, 0)
				FolderBtn.TextSize = 15.000

				FolderTitle.Name = "FolderTitle"
				FolderTitle.Parent = FolderBtn
				FolderTitle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
				FolderTitle.BackgroundTransparency = 1.000
				FolderTitle.Position = UDim2.new(0.00280837063, 0, 0, 0)
				FolderTitle.Size = UDim2.new(0, 197, 0, 25)
				FolderTitle.Font = Enum.Font.SourceSans
				FolderTitle.Text = text
				FolderTitle.TextColor3 = Color3.fromRGB(255,255,255)
				FolderTitle.TextSize = 15.000

				Icon.Name = "Icon"
				Icon.Parent = FolderBtn
				Icon.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
				Icon.BackgroundTransparency = 1.000
				Icon.Position = UDim2.new(1, 3, 0, 0)
				Icon.Size = UDim2.new(0, 26, 0, 26)
				Icon.Image = "http://www.roblox.com/asset/?id=6035047377"
				Icon.ImageColor3 = Color3.fromRGB(255,255,255)

				FolderHolder.Name = "FolderHolder"
				FolderHolder.Parent = FolderBtn
				FolderHolder.BackgroundColor3 = Color3.fromRGB(50,50,50)
				FolderHolder.BackgroundTransparency = 1.000
				FolderHolder.Position = UDim2.new(0, 0, 1.16666663, 0)
				FolderHolder.Size = UDim2.new(0, 162, 0, 0)

				FolderList.Name = "FolderList"
				FolderList.Parent = FolderHolder
				FolderList.SortOrder = Enum.SortOrder.LayoutOrder
				FolderList.Padding = UDim.new(0, 4)
				local FolderCont = {}

				FolderBtn.MouseButton1Click:Connect(
					function()
						if FolderToggled == false then
							TweenService:Create(
								Icon,
								TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
								{Rotation = 180}
							):Play()
							Icon.Image = "http://www.roblox.com/asset/?id=6035067836"
							Folder:TweenSize(
								UDim2.new(0, 198, 0, FolderList.AbsoluteContentSize.Y + 29),
								Enum.EasingDirection.Out,
								Enum.EasingStyle.Quart,
								0.1,
								true
							)
							repeat
								wait()
							until Folder.Size == UDim2.new(0, 198, 0, FolderList.AbsoluteContentSize.Y + 29)
							SectionItemHolder.CanvasSize = UDim2.new(0, 0, 0, SectionHolderList.AbsoluteContentSize.Y)
						else
							TweenService:Create(
								Icon,
								TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
								{Rotation = 0}
							):Play()
							Icon.Image = "http://www.roblox.com/asset/?id=6035047377"
							Folder:TweenSize(
								UDim2.new(0, 198, 0, 24),
								Enum.EasingDirection.Out,
								Enum.EasingStyle.Quart,
								0.1,
								true
							)
							repeat
								wait()
							until Folder.Size == UDim2.new(0, 198, 0, 24)
							SectionItemHolder.CanvasSize = UDim2.new(0, 0, 0, SectionHolderList.AbsoluteContentSize.Y)
						end
						FolderToggled = not FolderToggled
					end
				)

				function FolderCont:AddButton(text, callback)
					local Button = Instance.new("TextButton")
					local ButtonCorner = Instance.new("UICorner")

					Button.Name = "Button"
					Button.Parent = FolderHolder
					Button.BackgroundColor3 = Color3.fromRGB(64,63,64)
					Button.BorderSizePixel = 0
					Button.Size = UDim2.new(0, 198, 0, 26)
					Button.AutoButtonColor = false
					Button.Font = Enum.Font.SourceSans
					Button.TextColor3 = Color3.fromRGB(255,255,255)
					Button.TextSize = 15.000
					Button.ClipsDescendants = true
					Button.Text = text

					ButtonCorner.CornerRadius = UDim.new(0, 6)
					ButtonCorner.Name = "ButtonCorner"
					ButtonCorner.Parent = Button

					Button.MouseEnter:Connect(
						function()
							TweenService:Create(
								Button,
								TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
								{BackgroundColor3 = Color3.fromRGB(69,68,69)}
							):Play()
						end
					)

					Button.MouseLeave:Connect(
						function()
							TweenService:Create(
								Button,
								TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
								{BackgroundColor3 = Color3.fromRGB(64,63,64)}
							):Play()
						end
					)

					Button.MouseButton1Click:Connect(
						function()
							Ripple(Button)
							pcall(callback)
						end
					)
				end

				function FolderCont:AddSwitch(text, callback)
					local Toggled = false
					local Toggle = Instance.new("TextButton")
					local ToggleTitle = Instance.new("TextLabel")
					local ToggleFrame = Instance.new("Frame")
					local ToggleFrameCorner = Instance.new("UICorner")
					local ToggleFrameWhite = Instance.new("Frame")
					local ToggleFrameWhiteCorner = Instance.new("UICorner")
					local ToggleCircle = Instance.new("Frame")
					local ToggleCircleCorner = Instance.new("UICorner")

					Toggle.Name = "Toggle"
					Toggle.Parent = FolderHolder
					Toggle.BackgroundColor3 = Color3.fromRGB(50,50,50)
					Toggle.BorderSizePixel = 0
					Toggle.Position = UDim2.new(-0.306870222, 0, 1.23869348, 0)
					Toggle.Size = UDim2.new(0, 198, 0, 26)
					Toggle.AutoButtonColor = false
					Toggle.Font = Enum.Font.SourceSans
					Toggle.Text = ""
					Toggle.TextColor3 = Color3.fromRGB(0, 0, 0)
					Toggle.TextSize = 15.000

					ToggleTitle.Name = "ToggleTitle"
					ToggleTitle.Parent = Toggle
					ToggleTitle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
					ToggleTitle.BackgroundTransparency = 1.000
					ToggleTitle.Position = UDim2.new(0, 5, 0, 0)
					ToggleTitle.Size = UDim2.new(0, 17, 0, 25)
					ToggleTitle.Font = Enum.Font.SourceSans
					ToggleTitle.Text = text
					ToggleTitle.TextColor3 = Color3.fromRGB(255,255,255)
					ToggleTitle.TextSize = 15.000
					ToggleTitle.TextXAlignment = Enum.TextXAlignment.Left
					ToggleTitle.TextTransparency = 0.4

					ToggleFrame.Name = "ToggleFrame"
					ToggleFrame.Parent = Toggle
					ToggleFrame.AnchorPoint = Vector2.new(0.5, 0.5)
					ToggleFrame.BackgroundColor3 = Color3.fromRGB(235, 234, 235)
					ToggleFrame.Position = UDim2.new(0.898024716, 0, 0.461538464, 0)
					ToggleFrame.Size = UDim2.new(0, 33, 0, 19)

					ToggleFrameCorner.CornerRadius = UDim.new(1, 0)
					ToggleFrameCorner.Name = "ToggleFrameCorner"
					ToggleFrameCorner.Parent = ToggleFrame

					ToggleFrameWhite.Name = "ToggleFrameWhite"
					ToggleFrameWhite.Parent = ToggleFrame
					ToggleFrameWhite.AnchorPoint = Vector2.new(0.5, 0.5)
					ToggleFrameWhite.BackgroundColor3 = Color3.fromRGB(255, 254, 255)
					ToggleFrameWhite.LayoutOrder = 2
					ToggleFrameWhite.Position = UDim2.new(0.514999986, 0, 0.609000027, -2)
					ToggleFrameWhite.Size = UDim2.new(0, 30, 0, 16)

					ToggleFrameWhiteCorner.CornerRadius = UDim.new(1, 0)
					ToggleFrameWhiteCorner.Name = "ToggleFrameWhiteCorner"
					ToggleFrameWhiteCorner.Parent = ToggleFrameWhite

					ToggleCircle.Name = "ToggleCircle"
					ToggleCircle.Parent = ToggleFrame
					ToggleCircle.AnchorPoint = Vector2.new(0.5, 0.5)
					ToggleCircle.BackgroundColor3 = Color3.fromRGB(235, 234, 235)
					ToggleCircle.LayoutOrder = 1
					ToggleCircle.Position = UDim2.new(0.197999999, 0, 0.609000027, -2)
					ToggleCircle.Size = UDim2.new(0, 17, 0, 17)

					ToggleCircleCorner.CornerRadius = UDim.new(1, 0)
					ToggleCircleCorner.Name = "ToggleCircleCorner"
					ToggleCircleCorner.Parent = ToggleCircle

					Toggle.MouseButton1Click:Connect(
						function()
							if Toggled == false then
								TweenService:Create(
									ToggleCircle,
									TweenInfo.new(.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
									{BackgroundColor3 = Color3.fromRGB(101, 97, 214)}
								):Play()
								TweenService:Create(
									ToggleTitle,
									TweenInfo.new(.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
									{TextTransparency = 0}
								):Play()
								TweenService:Create(
									ToggleFrameWhite,
									TweenInfo.new(.1, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
									{BackgroundColor3 = Color3.fromRGB(229, 227, 255)}
								):Play()
								TweenService:Create(
									ToggleFrame,
									TweenInfo.new(.1, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
									{BackgroundColor3 = Color3.fromRGB(229, 227, 255)}
								):Play()
								ToggleCircle:TweenPosition(
									UDim2.new(0.688, 0, 0.609000027, -2),
									Enum.EasingDirection.Out,
									Enum.EasingStyle.Quart,
									0.2,
									true
								)
							else
								TweenService:Create(
									ToggleCircle,
									TweenInfo.new(.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
									{BackgroundColor3 = Color3.fromRGB(235, 234, 235)}
								):Play()
								TweenService:Create(
									ToggleTitle,
									TweenInfo.new(.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
									{TextTransparency = 0.4}
								):Play()
								TweenService:Create(
									ToggleFrameWhite,
									TweenInfo.new(.1, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
									{BackgroundColor3 = Color3.fromRGB(255, 254, 255)}
								):Play()
								TweenService:Create(
									ToggleFrame,
									TweenInfo.new(.1, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
									{BackgroundColor3 = Color3.fromRGB(235, 234, 235)}
								):Play()
								ToggleCircle:TweenPosition(
									UDim2.new(0.197999999, 0, 0.609000027, -2),
									Enum.EasingDirection.Out,
									Enum.EasingStyle.Quart,
									0.2,
									true
								)
							end
							Toggled = not Toggled
							pcall(callback, Toggled)
						end
					)
				end

				function FolderCont:AddSlider(text, min, max, callback)
					local dragging = false
					local Slider = Instance.new("TextButton")
					local SliderTitle = Instance.new("TextLabel")
					local SlideFrame = Instance.new("Frame")
					local CurrentValueFrame = Instance.new("Frame")
					local SlideCircle = Instance.new("ImageButton")
					local Value = Instance.new("TextLabel")

					Slider.Name = "Slider"
					Slider.Parent = FolderHolder
					Slider.BackgroundColor3 = Color3.fromRGB(50,50,50)
					Slider.BorderSizePixel = 0
					Slider.Position = UDim2.new(0.422900766, 0, 1.18090463, 0)
					Slider.Size = UDim2.new(0, 198, 0, 45)
					Slider.AutoButtonColor = false
					Slider.Font = Enum.Font.SourceSans
					Slider.Text = ""
					Slider.TextColor3 = Color3.fromRGB(0, 0, 0)
					Slider.TextSize = 15.000

					SliderTitle.Name = "SliderTitle"
					SliderTitle.Parent = Slider
					SliderTitle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
					SliderTitle.BackgroundTransparency = 1.000
					SliderTitle.Position = UDim2.new(0, 5, 0, 0)
					SliderTitle.Size = UDim2.new(0, 17, 0, 25)
					SliderTitle.Font = Enum.Font.SourceSans
					SliderTitle.Text = text
					SliderTitle.TextColor3 = Color3.fromRGB(255,255,255)
					SliderTitle.TextSize = 15.000
					SliderTitle.TextXAlignment = Enum.TextXAlignment.Left

					SlideFrame.Name = "SlideFrame"
					SlideFrame.Parent = Slider
					SlideFrame.BackgroundColor3 = Color3.fromRGB(235, 234, 235)
					SlideFrame.BorderSizePixel = 0
					SlideFrame.Position = UDim2.new(0.0439362712, 0, 0.646098614, 0)
					SlideFrame.Size = UDim2.new(0, 182, 0, 3)

					CurrentValueFrame.Name = "CurrentValueFrame"
					CurrentValueFrame.Parent = SlideFrame
					CurrentValueFrame.BackgroundColor3 = Color3.fromRGB(229, 227, 255)
					CurrentValueFrame.BorderSizePixel = 0
					CurrentValueFrame.Position = UDim2.new(-0.01369863, 0, 0, 0)
					CurrentValueFrame.Size = UDim2.new(0, 0, 0, 3)

					SlideCircle.Name = "SlideCircle"
					SlideCircle.Parent = SlideFrame
					SlideCircle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
					SlideCircle.BackgroundTransparency = 1.000
					SlideCircle.Position = UDim2.new(-0.02054796, 0, -1.90476203, 0)
					SlideCircle.Size = UDim2.new(0, 14, 0, 14)
					SlideCircle.Image = "rbxassetid://3570695787"
					SlideCircle.ImageColor3 = Color3.fromRGB(101, 97, 214)

					Value.Name = "Value"
					Value.Parent = Slider
					Value.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
					Value.BackgroundTransparency = 1.000
					Value.Position = UDim2.new(0, 176, 0, 0)
					Value.Size = UDim2.new(0, 17, 0, 25)
					Value.Font = Enum.Font.SourceSans
					Value.Text = min
					Value.TextColor3 = Color3.fromRGB(255,255,255)
					Value.TextSize = 16.000
					Value.TextXAlignment = Enum.TextXAlignment.Right

					local function move(input)
						local pos =
							UDim2.new(
								math.clamp(
									(input.Position.X - SlideFrame.AbsolutePosition.X) / SlideFrame.AbsoluteSize.X,
									0,
									1
								),
								-6,
								-1.90476203,
								0
							)
						local pos1 =
							UDim2.new(
								math.clamp(
									(input.Position.X - SlideFrame.AbsolutePosition.X) / SlideFrame.AbsoluteSize.X,
									0,
									1
								),
								0,
								0,
								3
							)
						CurrentValueFrame:TweenSize(pos1, "Out", "Sine", 0.1, true)
						SlideCircle:TweenPosition(pos, "Out", "Sine", 0.1, true)
						local value = math.floor(((pos.X.Scale * max) / max) * (max - min) + min)
						Value.Text = tostring(value)
						pcall(callback, value)
					end
					SlideCircle.InputBegan:Connect(
						function(input)
							if input.UserInputType == Enum.UserInputType.MouseButton1 then
								dragging = true
							end
						end
					)
					SlideCircle.InputEnded:Connect(
						function(input)
							if input.UserInputType == Enum.UserInputType.MouseButton1 then
								dragging = false
							end
						end
					)
					game:GetService("UserInputService").InputChanged:Connect(
					function(input)
						if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
							move(input)
						end
					end
					)
				end
				function FolderCont:AddDropdown(text, list, callback)
					local Current = text
					local ItemCount = 0
					local FrameSize = 0
					local DropToggled = false

					local Dropdown = Instance.new("TextButton")
					local DropdownTitle = Instance.new("TextLabel")
					local Arrow = Instance.new("ImageLabel")
					local DropdownCorner = Instance.new("UICorner")

					Dropdown.Name = "Dropdown"
					Dropdown.Parent = FolderHolder
					Dropdown.BackgroundColor3 = Color3.fromRGB(50,50,50)
					Dropdown.BorderSizePixel = 0
					Dropdown.Position = UDim2.new(-0.311450362, 0, 0.595477402, 0)
					Dropdown.Size = UDim2.new(0, 198, 0, 26)
					Dropdown.AutoButtonColor = false
					Dropdown.Font = Enum.Font.SourceSans
					Dropdown.Text = ""
					Dropdown.TextColor3 = Color3.fromRGB(0, 0, 0)
					Dropdown.TextSize = 15.000

					DropdownCorner.CornerRadius = UDim.new(0, 6)
					DropdownCorner.Name = "ItemCorner"
					DropdownCorner.Parent = Dropdown

					DropdownTitle.Name = "DropdownTitle"
					DropdownTitle.Parent = Dropdown
					DropdownTitle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
					DropdownTitle.BackgroundTransparency = 1.000
					DropdownTitle.Position = UDim2.new(0, 5, 0, 0)
					DropdownTitle.Size = UDim2.new(0, 17, 0, 25)
					DropdownTitle.Font = Enum.Font.SourceSans
					DropdownTitle.Text = text
					DropdownTitle.TextColor3 = Color3.fromRGB(255,255,255)
					DropdownTitle.TextSize = 15.000
					DropdownTitle.TextXAlignment = Enum.TextXAlignment.Left

					Arrow.Name = "Arrow"
					Arrow.Parent = Dropdown
					Arrow.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
					Arrow.BackgroundTransparency = 1.000
					Arrow.Position = UDim2.new(0.839506149, 0, 0, 0)
					Arrow.Size = UDim2.new(0, 26, 0, 26)
					Arrow.Image = "http://www.roblox.com/asset/?id=6034818372"
					Arrow.ImageColor3 = Color3.fromRGB(255,255,255)

					local DropdownFrame = Instance.new("ScrollingFrame")
					local DropdownFrameList = Instance.new("UIListLayout")

					DropdownFrame.Name = "DropdownFrame"
					DropdownFrame.Parent = FolderHolder
					DropdownFrame.Active = true
					DropdownFrame.BackgroundColor3 = Color3.fromRGB(50,50,50)
					DropdownFrame.BorderSizePixel = 0
					DropdownFrame.Position = UDim2.new(0, 0, 0.448387086, 0)
					DropdownFrame.Size = UDim2.new(0, 203, 0, 0)
					DropdownFrame.SizeConstraint = Enum.SizeConstraint.RelativeXX
					DropdownFrame.CanvasSize = UDim2.new(0, 0, 0, 0)
					DropdownFrame.ScrollBarThickness = 3
					DropdownFrame.Visible = false
					DropdownFrame.ScrollBarImageColor3 = Color3.fromRGB(235, 234, 235)

					DropdownFrameList.Name = "DropdownFrameList"
					DropdownFrameList.Parent = DropdownFrame
					DropdownFrameList.SortOrder = Enum.SortOrder.LayoutOrder

					Dropdown.MouseButton1Click:Connect(
						function()
							if DropToggled == false then
								DropdownFrame.Visible = true
								DropdownFrame:TweenSize(
									UDim2.new(0, 198, 0, FrameSize),
									Enum.EasingDirection.Out,
									Enum.EasingStyle.Quart,
									0.1,
									true
								)
								DropdownTitle.Text = Current
								TweenService:Create(
									Arrow,
									TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
									{Rotation = 180}
								):Play()
								TweenService:Create(
									Dropdown,
									TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
									{BackgroundColor3 = Color3.fromRGB(69,68,69)}
								):Play()
								TweenService:Create(
									DropdownTitle,
									TweenInfo.new(.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
									{TextTransparency = 0.4}
								):Play()
								DropToggled = not DropToggled
								repeat
									wait()
								until DropdownFrame.Size == UDim2.new(0, 198, 0, FrameSize)
								Folder.Size = UDim2.new(0, 198, 0, FolderList.AbsoluteContentSize.Y + 29)
								SectionItemHolder.CanvasSize =
									UDim2.new(0, 0, 0, SectionHolderList.AbsoluteContentSize.Y)
							else
								DropdownFrame:TweenSize(
									UDim2.new(0, 198, 0, 0),
									Enum.EasingDirection.Out,
									Enum.EasingStyle.Quart,
									0.1,
									true
								)
								TweenService:Create(
									Dropdown,
									TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
									{BackgroundColor3 = Color3.fromRGB(50,50,50)}
								):Play()
								TweenService:Create(
									Arrow,
									TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
									{Rotation = 0}
								):Play()
								DropdownTitle.Text = text
								TweenService:Create(
									DropdownTitle,
									TweenInfo.new(.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
									{TextTransparency = 0}
								):Play()
								DropToggled = not DropToggled
								repeat
									wait()
								until DropdownFrame.Size == UDim2.new(0, 198, 0, 0)
								Folder.Size = UDim2.new(0, 198, 0, FolderList.AbsoluteContentSize.Y + 29)
								SectionItemHolder.CanvasSize =
									UDim2.new(0, 0, 0, SectionHolderList.AbsoluteContentSize.Y)
								DropdownFrame.Visible = false
							end
						end
					)

					for i, v in next, list do
						ItemCount = ItemCount + 1

						if ItemCount <= 2 then
							FrameSize = FrameSize + 26
						elseif ItemCount >= 3 then
							FrameSize = 78
						end

						local Item = Instance.new("TextButton")
						local ItemCorner = Instance.new("UICorner")

						Item.Name = "Item"
						Item.Parent = DropdownFrame
						Item.BackgroundColor3 = Color3.fromRGB(50,50,50)
						Item.BorderSizePixel = 0
						Item.Position = UDim2.new(-0.233587787, 0, 0.934673369, 0)
						Item.Size = UDim2.new(0, 198, 0, 26)
						Item.AutoButtonColor = false
						Item.Font = Enum.Font.SourceSans
						Item.TextColor3 = Color3.fromRGB(255,255,255)
						Item.TextSize = 15.000
						Item.Text = v

						ItemCorner.CornerRadius = UDim.new(0, 6)
						ItemCorner.Name = "ItemCorner"
						ItemCorner.Parent = Item

						Item.MouseEnter:Connect(
							function()
								TweenService:Create(
									Item,
									TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
									{BackgroundColor3 = Color3.fromRGB(69,68,69)}
								):Play()
							end
						)

						Item.MouseLeave:Connect(
							function()
								TweenService:Create(
									Item,
									TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
									{BackgroundColor3 = Color3.fromRGB(50,50,50)}
								):Play()
							end
						)

						Item.MouseButton1Click:Connect(
							function()
								pcall(callback, v)
								DropdownFrame:TweenSize(
									UDim2.new(0, 169, 0, 0),
									Enum.EasingDirection.Out,
									Enum.EasingStyle.Quart,
									0.1,
									true
								)
								TweenService:Create(
									Dropdown,
									TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
									{BackgroundColor3 = Color3.fromRGB(50,50,50)}
								):Play()
								Current = v
								DropdownTitle.Text = text
								TweenService:Create(
									Arrow,
									TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
									{Rotation = 0}
								):Play()
								TweenService:Create(
									DropdownTitle,
									TweenInfo.new(.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
									{TextTransparency = 0}
								):Play()
								DropToggled = not DropToggled
								repeat
									wait()
								until DropdownFrame.Size == UDim2.new(0, 169, 0, 0)
								SectionItemHolder.CanvasSize =
									UDim2.new(0, 0, 0, SectionHolderList.AbsoluteContentSize.Y)
								DropdownFrame.Visible = false
							end
						)

						DropdownFrame.CanvasSize = UDim2.new(0, 0, 0, DropdownFrameList.AbsoluteContentSize.Y)
					end
				end

				function FolderCont:AddLabel(text)
					local Label = Instance.new("TextButton")

					Label.Name = "Button"
					Label.Parent = FolderHolder
					Label.BackgroundColor3 = Color3.fromRGB(50,50,50)
					Label.BorderSizePixel = 0
					Label.Size = UDim2.new(0, 198, 0, 26)
					Label.AutoButtonColor = false
					Label.Font = Enum.Font.SourceSans
					Label.TextColor3 = Color3.fromRGB(255,255,255)
					Label.TextSize = 15.000
					Label.ClipsDescendants = true
					Label.Text = text
				end

				function FolderCont:AddColorpicker(text, preset, callback)
					local ColorPickerToggled = false
					local OldToggleColor = Color3.fromRGB(0, 0, 0)
					local OldColor = Color3.fromRGB(0, 0, 0)
					local OldColorSelectionPosition = nil
					local OldHueSelectionPosition = nil
					local ColorH, ColorS, ColorV = 1, 1, 1
					local RainbowColorPicker = false
					local ColorPickerInput = nil
					local ColorInput = nil
					local HueInput = nil

					local Colorpicker = Instance.new("TextButton")
					local ColorpickerTitle = Instance.new("TextLabel")
					local ColorpickerBox = Instance.new("Frame")
					local ColorpickerCorner = Instance.new("UICorner")

					Colorpicker.Name = "Colorpicker"
					Colorpicker.Parent = FolderHolder
					Colorpicker.BackgroundColor3 = Color3.fromRGB(50,50,50)
					Colorpicker.BorderSizePixel = 0
					Colorpicker.Position = UDim2.new(-0.306870222, 0, 1.23869348, 0)
					Colorpicker.Size = UDim2.new(0, 198, 0, 26)
					Colorpicker.AutoButtonColor = false
					Colorpicker.Font = Enum.Font.SourceSans
					Colorpicker.Text = ""
					Colorpicker.TextColor3 = Color3.fromRGB(0, 0, 0)
					Colorpicker.TextSize = 15.000

					ColorpickerTitle.Name = "ColorpickerTitle"
					ColorpickerTitle.Parent = Colorpicker
					ColorpickerTitle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
					ColorpickerTitle.BackgroundTransparency = 1.000
					ColorpickerTitle.Position = UDim2.new(0, 5, 0, 0)
					ColorpickerTitle.Size = UDim2.new(0, 17, 0, 25)
					ColorpickerTitle.Font = Enum.Font.SourceSans
					ColorpickerTitle.Text = text
					ColorpickerTitle.TextColor3 = Color3.fromRGB(255,255,255)
					ColorpickerTitle.TextSize = 15.000
					ColorpickerTitle.TextXAlignment = Enum.TextXAlignment.Left
					ColorpickerTitle.TextTransparency = 0.4

					ColorpickerBox.Name = "ToggleFrame"
					ColorpickerBox.Parent = Colorpicker
					ColorpickerBox.AnchorPoint = Vector2.new(0.5, 0.5)
					ColorpickerBox.BackgroundColor3 = preset
					ColorpickerBox.Position = UDim2.new(0.868024716, 0, 0.461538464, 0)
					ColorpickerBox.Size = UDim2.new(0, 33, 0, 19)

					ColorpickerCorner.CornerRadius = UDim.new(0, 6)
					ColorpickerCorner.Name = "ToggleFrameCorner"
					ColorpickerCorner.Parent = ColorpickerBox
					local ColorpickerFrame = Instance.new("ScrollingFrame")
					local Hue = Instance.new("ImageLabel")
					local HueCorner = Instance.new("UICorner")
					local HueGradient = Instance.new("UIGradient")
					local HueSelection = Instance.new("ImageLabel")
					local Color = Instance.new("ImageLabel")
					local ColorCorner = Instance.new("UICorner")
					local ColorSelection = Instance.new("ImageLabel")
					local Confirm = Instance.new("TextButton")
					local ConfirmCorner = Instance.new("UICorner")

					ColorpickerFrame.Name = "ColorpickerFrame"
					ColorpickerFrame.Parent = FolderHolder
					ColorpickerFrame.Active = true
					ColorpickerFrame.BackgroundColor3 = Color3.fromRGB(50,50,50)
					ColorpickerFrame.BorderSizePixel = 0
					ColorpickerFrame.Position = UDim2.new(-0.384732813, 0, 0.362425059, 0)
					ColorpickerFrame.Size = UDim2.new(0, 198, 0, 0)
					ColorpickerFrame.SizeConstraint = Enum.SizeConstraint.RelativeXX
					ColorpickerFrame.CanvasSize = UDim2.new(0, 0, 0, 0)
					ColorpickerFrame.ScrollBarThickness = 3
					ColorpickerFrame.Visible = false

					Hue.Name = "Hue"
					Hue.Parent = ColorpickerFrame
					Hue.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
					Hue.Position = UDim2.new(0, 167, 0, 9)
					Hue.Size = UDim2.new(0, 21, 0, 114)

					HueCorner.CornerRadius = UDim.new(0, 3)
					HueCorner.Name = "HueCorner"
					HueCorner.Parent = Hue

					HueGradient.Color =
						ColorSequence.new {
							ColorSequenceKeypoint.new(0.00, Color3.fromRGB(255, 0, 4)),
							ColorSequenceKeypoint.new(0.20, Color3.fromRGB(234, 255, 0)),
							ColorSequenceKeypoint.new(0.40, Color3.fromRGB(21, 255, 0)),
							ColorSequenceKeypoint.new(0.60, Color3.fromRGB(0, 255, 255)),
							ColorSequenceKeypoint.new(0.80, Color3.fromRGB(0, 17, 255)),
							ColorSequenceKeypoint.new(0.90, Color3.fromRGB(255, 0, 251)),
							ColorSequenceKeypoint.new(1.00, Color3.fromRGB(255, 0, 4))
						}
					HueGradient.Rotation = 270
					HueGradient.Name = "HueGradient"
					HueGradient.Parent = Hue

					HueSelection.Name = "HueSelection"
					HueSelection.Parent = Hue
					HueSelection.AnchorPoint = Vector2.new(0.5, 0.5)
					HueSelection.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
					HueSelection.BackgroundTransparency = 1.000
					HueSelection.Position = UDim2.new(0.48, 0, 1 - select(1, Color3.toHSV(preset)))
					HueSelection.Size = UDim2.new(0, 18, 0, 18)
					HueSelection.Image = "http://www.roblox.com/asset/?id=4805639000"

					Color.Name = "Color"
					Color.Parent = ColorpickerFrame
					Color.BackgroundColor3 = preset
					Color.Position = UDim2.new(0, 5, 0, 9)
					Color.Size = UDim2.new(0, 155, 0, 114)
					Color.ZIndex = 10
					Color.Image = "rbxassetid://4155801252"

					ColorCorner.CornerRadius = UDim.new(0, 3)
					ColorCorner.Name = "ColorCorner"
					ColorCorner.Parent = Color

					ColorSelection.Name = "ColorSelection"
					ColorSelection.Parent = Color
					ColorSelection.AnchorPoint = Vector2.new(0.5, 0.5)
					ColorSelection.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
					ColorSelection.BackgroundTransparency = 1.000
					ColorSelection.Position = UDim2.new(preset and select(3, Color3.toHSV(preset)))
					ColorSelection.Size = UDim2.new(0, 18, 0, 18)
					ColorSelection.Image = "http://www.roblox.com/asset/?id=4805639000"
					ColorSelection.ScaleType = Enum.ScaleType.Fit

					Confirm.Name = "Confirm"
					Confirm.Parent = ColorpickerFrame
					Confirm.BackgroundColor3 = Color3.fromRGB(64,63,64)
					Confirm.BorderSizePixel = 0
					Confirm.Position = UDim2.new(0.0299999993, 0, 0.834025204, 0)
					Confirm.Size = UDim2.new(0, 168, 0, 26)
					Confirm.AutoButtonColor = false
					Confirm.Font = Enum.Font.SourceSans
					Confirm.Text = "Confirm"
					Confirm.TextColor3 = Color3.fromRGB(255,255,255)
					Confirm.TextSize = 16.000

					ConfirmCorner.CornerRadius = UDim.new(0, 6)
					ConfirmCorner.Name = "ConfirmCorner"
					ConfirmCorner.Parent = Confirm
					SectionItemHolder.CanvasSize = UDim2.new(0, 0, 0, SectionHolderList.AbsoluteContentSize.Y)

					local function UpdateColorPicker(nope)
						ColorpickerBox.BackgroundColor3 = Color3.fromHSV(ColorH, ColorS, ColorV)
						Color.BackgroundColor3 = Color3.fromHSV(ColorH, 1, 1)

						pcall(callback, ColorpickerBox.BackgroundColor3)
					end

					ColorH =
						1 -
						(math.clamp(HueSelection.AbsolutePosition.Y - Hue.AbsolutePosition.Y, 0, Hue.AbsoluteSize.Y) /
							Hue.AbsoluteSize.Y)
					ColorS =
						(math.clamp(
							ColorSelection.AbsolutePosition.X - Color.AbsolutePosition.X,
							0,
							Color.AbsoluteSize.X
							) / Color.AbsoluteSize.X)
					ColorV =
						1 -
						(math.clamp(
							ColorSelection.AbsolutePosition.Y - Color.AbsolutePosition.Y,
							0,
							Color.AbsoluteSize.Y
							) /
							Color.AbsoluteSize.Y)

					ColorpickerBox.BackgroundColor3 = preset
					Color.BackgroundColor3 = preset
					pcall(callback, ColorpickerBox.BackgroundColor3)

					Color.InputBegan:Connect(
						function(input)
							if input.UserInputType == Enum.UserInputType.MouseButton1 then
								if RainbowColorPicker then
									return
								end

								if ColorInput then
									ColorInput:Disconnect()
								end

								ColorInput =
									RunService.RenderStepped:Connect(
										function()
										local ColorX =
											(math.clamp(Mouse.X - Color.AbsolutePosition.X, 0, Color.AbsoluteSize.X) /
												Color.AbsoluteSize.X)
										local ColorY =
											(math.clamp(Mouse.Y - Color.AbsolutePosition.Y, 0, Color.AbsoluteSize.Y) /
												Color.AbsoluteSize.Y)

										ColorSelection.Position = UDim2.new(ColorX, 0, ColorY, 0)
										ColorS = ColorX
										ColorV = 1 - ColorY

										UpdateColorPicker(true)
									end
									)
							end
						end
					)

					Color.InputEnded:Connect(
						function(input)
							if input.UserInputType == Enum.UserInputType.MouseButton1 then
								if ColorInput then
									ColorInput:Disconnect()
								end
							end
						end
					)

					Hue.InputBegan:Connect(
						function(input)
							if input.UserInputType == Enum.UserInputType.MouseButton1 then
								if RainbowColorPicker then
									return
								end

								if HueInput then
									HueInput:Disconnect()
								end

								HueInput =
									RunService.RenderStepped:Connect(
										function()
										local HueY =
											(math.clamp(Mouse.Y - Hue.AbsolutePosition.Y, 0, Hue.AbsoluteSize.Y) /
												Hue.AbsoluteSize.Y)

										HueSelection.Position = UDim2.new(0.48, 0, HueY, 0)
										ColorH = 1 - HueY

										UpdateColorPicker(true)
									end
									)
							end
						end
					)

					Hue.InputEnded:Connect(
						function(input)
							if input.UserInputType == Enum.UserInputType.MouseButton1 then
								if HueInput then
									HueInput:Disconnect()
								end
							end
						end
					)

					Confirm.MouseEnter:Connect(
						function()
							TweenService:Create(
								Confirm,
								TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
								{BackgroundColor3 = Color3.fromRGB(69,68,69)}
							):Play()
						end
					)

					Confirm.MouseLeave:Connect(
						function()
							TweenService:Create(
								Confirm,
								TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
								{BackgroundColor3 = Color3.fromRGB(64,63,64)}
							):Play()
						end
					)

					Colorpicker.MouseButton1Click:Connect(
						function()
							if ColorPickerToggled == false then
								ColorPickerToggled = not ColorPickerToggled
								ColorpickerFrame.Visible = true
								ColorpickerFrame:TweenSize(
									UDim2.new(0, 198, 0, 154),
									Enum.EasingDirection.Out,
									Enum.EasingStyle.Quart,
									0.1,
									true
								)
								TweenService:Create(
									ColorpickerTitle,
									TweenInfo.new(.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
									{TextTransparency = 0}
								):Play()
								repeat
									wait()
								until ColorpickerFrame.Size == UDim2.new(0, 198, 0, 154)
								Folder.Size = UDim2.new(0, 198, 0, FolderList.AbsoluteContentSize.Y + 29)
								SectionItemHolder.CanvasSize =
									UDim2.new(0, 0, 0, SectionHolderList.AbsoluteContentSize.Y)
							else
								ColorPickerToggled = not ColorPickerToggled
								ColorpickerFrame:TweenSize(
									UDim2.new(0, 198, 0, 0),
									Enum.EasingDirection.Out,
									Enum.EasingStyle.Quart,
									0.1,
									true
								)
								TweenService:Create(
									ColorpickerTitle,
									TweenInfo.new(.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
									{TextTransparency = 0.4}
								):Play()
								repeat
									wait()
								until ColorpickerFrame.Size == UDim2.new(0, 198, 0, 0)
								ColorpickerFrame.Visible = false
								Folder.Size = UDim2.new(0, 198, 0, FolderList.AbsoluteContentSize.Y + 29)
								SectionItemHolder.CanvasSize =
									UDim2.new(0, 0, 0, SectionHolderList.AbsoluteContentSize.Y)
							end
						end
					)

					Confirm.MouseButton1Click:Connect(
						function()
							ColorPickerToggled = not ColorPickerToggled
							ColorpickerFrame:TweenSize(
								UDim2.new(0, 198, 0, 0),
								Enum.EasingDirection.Out,
								Enum.EasingStyle.Quart,
								0.1,
								true
							)
							TweenService:Create(
								ColorpickerTitle,
								TweenInfo.new(.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
								{TextTransparency = 0.4}
							):Play()
							repeat
								wait()
							until ColorpickerFrame.Size == UDim2.new(0, 198, 0, 0)
							ColorpickerFrame.Visible = false
							Folder.Size = UDim2.new(0, 198, 0, FolderList.AbsoluteContentSize.Y + 29)
							SectionItemHolder.CanvasSize = UDim2.new(0, 0, 0, SectionHolderList.AbsoluteContentSize.Y)
						end
					)
				end
				return FolderCont
			end
			return SectionContent
		end
		return TabContent
	end
	return Tabs
end
return LibMain
